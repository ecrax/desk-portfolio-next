/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useGLTF } from "@react-three/drei";
import { useState } from "react";
import type { GLTF } from "three-stdlib";
import type THREE from "three";

type GLTFResult = GLTF & {
  nodes: {
    Cube: THREE.Mesh;
    TableLegs: THREE.Mesh;
    Cube001: THREE.Mesh;
    Table: THREE.Mesh;
    Keyboard: THREE.Mesh;
  };
  materials: {
    Material: THREE.MeshStandardMaterial;
  };
};

export function Table(props: JSX.IntrinsicElements["group"]) {
  const { nodes } = useGLTF("/table.glb") as GLTFResult;

  const [hover, setHover] = useState(false);

  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube.geometry}
        position={[0, 0.49, 0]}
        scale={[1, 0.01, 0.35]}
      >
        <meshStandardMaterial />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.TableLegs.geometry}
        position={[0.9257, 0.24, -0.2812]}
        scale={[0.015, 0.24, 0.015]}
      >
        <meshStandardMaterial />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube001.geometry}
        position={[0, 0.5862, -0.2751]}
        scale={[1, 0.005, 0.075]}
      >
        <meshStandardMaterial />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Table.geometry}
        position={[0, 0.5363, -0.2751]}
        rotation={[0, 0, -Math.PI / 2]}
        scale={[0.045, 0.005, -0.075]}
      >
        <meshStandardMaterial />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Keyboard.geometry}
        position={[0, 0.5132, 0]}
        scale={[0.4193, 0.013, 0.0835]}
        onPointerOver={() => setHover(true)}
        onPointerOut={() => setHover(false)}
        onClick={() => alert("you tapped a keyboard")}
      >
        <meshStandardMaterial color={hover ? "#818cf8" : "#6366f1"} />
      </mesh>
    </group>
  );
}

useGLTF.preload("table.glb");
